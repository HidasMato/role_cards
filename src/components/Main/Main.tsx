import React, { useEffect, useState } from 'react';
import Vid from '../../images/Виды карточек заклинаний.png'
import Stroka from '../../images/Строка состояния.png'
import Perepolnenie from '../../images/Переполнение.png'
import Excel from '../../images/excel.png'
import Rubaha from '../../images/Рубаха.png'
import style from './Main.module.scss';
type AlertProps = {
};
const Main = ({ }: AlertProps): JSX.Element => {
    const [targetSpravka, setTargetSpravka] = useState(0);
    const getContent = () => { 
        switch (targetSpravka) {
            case 1:
                return (
                    <div className={style.Content}>
                        <p className={style.Zaglavie}>{"Карточки заклинаний. Официальный вид"}</p>
                        <div className={style.Opisanie}>
                            <p>Конструктор позволяет создавать карточки заклинаний по виду напоминающие официальные карточки ДнД 5. В настройках можно выбрать общий вид карточки. Первый соответствует разметке официальных карточек, остальное - фантазия автора на тему.</p>
                            <img className={style.IMG} src={Vid} alt="Тут должны были быть виды карточек, но что-то пошло не так" />
                            <p>Справа наверху находится строка состояния. Она позволяет сохранить текущие настройки карточек и в дальнейшем использовать их снова. Настройки сбрасываются при обновлении страницы. <b>Для копирования строки необходимо: "Выделить все" затем "Копировать". Для вставки: "Выделить все" затем "Вставить". Если вставку производить без выделения, все может поломаться :3</b></p>
                            <img className={style.IMG} src={Stroka} alt="Тут должна была быть строка состояния, но что-то пошло не так" />
                            <p>Настройка "Линия разметки" позволяет ставить тонкую линию для понимания где совершать разрез на лицевой стороне. Но также она немного уменьшает карточки справа и снизу. Рубашки карточек при резке могут немного съехать. Если Вам это мешает, отключите эту настройку, но резать придется на глаз.</p>
                            <p>Настройки размера листа впринципе не советую трогать, если Вы не собираетесь печатать карточки на нестандартном формате.</p>
                            <p>Подгонка описания позволяет сделать динамичный размер поля описания. Программа старается подобрать такой размер текста, чтобы он не выходил за пределы поля начиная с максимального и заканчивая минимальным размером текста. Если программе это не удается - она выписывает заголовки карточек, в которых произошло переполнение:</p>
                            <img className={style.IMG} src={Perepolnenie} alt="Тут должен был быть блок переполнения, но что-то пошло не так" />
                            <p>У настройки цвета фона листа есть только один смысл: когда Вы печатаете на принтере, он может неровно брать бумагу, и, в случае с двусторонней печатью, рубашки карточек будут смещены относительно лицевых сторон. Поэтому я предлагаю ставить цвет фона как обводку карточек.</p>
                            <p>При заполнении карточки в CSV-редакторе, можно указать номер рубахи и номер рамки. Если там указан номер, написанный рядом с какой-либо рубахой, то в независимости от того какая рубаха будет выбрана в режиме печати, на этой карточке будет отображаться только эта карточка. Если там прописать "0" или номер рубахи, которого нет в списке, или любой набор символов, который невозможно привести к цифре, то программа поставит там выбранную в данный момент рубаху.</p>
                            <img className={style.IMG} src={Rubaha} alt="Тут должен был быть выбор рубахи, но что-то пошло не так" />
                            <p>Система записи в CSV-поле представляет собой набор строк, где каждая строка - одна карточка. В строке есть 17 полей, каждое из которых выглядит как: <b>"информация";</b>. Поле описания карточки и поле дополнительног описания поддерживают символ переноса строки, который в условиях моей программы заменен на символ <b>Џ</b>. Если Вы редактируете файл самостоятельно, обращаете на это внимание. Вы можете редактировать CSV-файлы вручную или используя Excel. Для этого скачайте файл в нижнем поле настроек и откройте его при помощи Excel. Совершите изменения, а затем сохраните в формате <b>CSV (разделители - запятые) (*csv)</b>. Затем загрузите файл в программу.</p>
                            <img className={style.IMG} src={Excel} alt="Тут должен был быть excel, но что-то пошло не так" />
                        </div>
                    </div>
                );
            case 2:
                return (
                    <div className={style.Content}>
                        <p className={style.Zaglavie}>{"Карточки заклинаний. Официальный вид"}</p>
                        <div className={style.Opisanie}>
                            <p>Конструктор позволяет создавать карточки предметов по виду напоминающие официальные карточки ДнД 5.</p>
                            <p>Вцелом, конструктор не отличается по настройкам от конструктора карточего заклинаний.</p>
                            <p>Система записи в CSV-поле представляет собой набор строк, где каждая строка - одна карточка. В строке есть 13 полей, каждое из которых выглядит как: <b>"информация";</b>. Поле описания карточки и поле дополнительног описания поддерживают символ переноса строки, который в условиях моей программы заменен на символ <b>Џ</b>. Если Вы редактируете файл самостоятельно, обращаете на это внимание. Вы можете редактировать CSV-файлы вручную или используя Excel. Для этого скачайте файл в нижнем поле настроек и откройте его при помощи Excel. Совершите изменения, а затем сохраните в формате <b>CSV (разделители - запятые) (*csv)</b>. Затем загрузите файл в программу.</p>
                            <img className={style.IMG} src={Excel} alt="Тут должен был быть excel, но что-то пошло не так" />
                        </div>
                    </div>
                );
            default:
                return (
                    <div></div>
                );
        }
    };
    return (
        <div className={style.Main}>
            <p className={style.Zaglavie}>{"Наверху можно перейти к конструктору."}</p>
            <div className={style.All}>
                <div className={style.Menu}>
                    <div className={style.P}>{"Разъяснительные материалы по конструкторам:"}</div>
                    <div className={style.D}>
                        <div className={style.Li} onClick={() => {setTargetSpravka(1)}}><p>{"Карточки заклинаний.\nОфициальный вид"}</p></div> 
                        <div className={style.Li} onClick={() => {setTargetSpravka(2)}}><p>{"Карточки предметов.\nОфициальный вид"}</p></div>  
                    </div>
                </div>
                {getContent()}
            </div>
        </div>
    );
}
export default Main;